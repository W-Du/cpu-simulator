
# +--------+----------+-------------------------------------+
# | OPCODE | FUNCTION | Definition                          |
# | 000000 |  100000  | Add two numbers from registers      |
# | 000000 |  100010  | Subtract two numbers from registers |
# | 000000 |  011000  | Multiply two numbers from registers |
# | 000000 |  011010  | Divide two numbers from registers   |
# | 000001 |  000000  | Store value to next register        |
# | 100001 |  000000  | Return previous calculation         |
# +--------+----------+-------------------------------------+

# 000000 00000 00000 00000 00000 000000
#   op    rs    rt    rd   shamt  func
#  0-5   6-10  11-15  16-20  21-25  26-31   

# op	OPCODE
# rs	first source register
# rt	second source register
# rd	destination register
# shamt	bit shift amount
# func	extra bits for additional functions



# Number	    Name	          Comments
# $0	        $zero, $r0	      Always zero
# $1	        $at	Reserved      for assembler
# $2, $3	    $v0, $v1	      First and second return values, respectively
# $4, ..., $7	$a0, ..., $a3	  First four arguments to functions
# $8, ..., $15	$t0, ..., $t7	  Temporary registers
# $16, ..., $23	$s0, ..., $s7	  Saved registers
# $24, $25	    $t8, $t9	      More temporary registers
# $26, $27	    $k0, $k1	      Reserved for kernel (operating system)
# $28	        $gp	              Global pointer
# $29	        $sp	              Stack pointer
# $30	        $fp	              Frame pointer
# $31	        $ra	              Return address